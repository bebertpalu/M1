to alist [cles valeur lst]
  let dico[]
  set dico lput cles dico
  set dico lput valeur dico
  
  set lst lput dico lst
end

to-report lookup [cles lst]
  let indice 0
  foreach lst [
   if item 0 ? = cles [report item 1 ?]
   set indice indice + 1
  ]
end

to alistb [cles valeur]
  let dico[]
  set dico lput cles dico
  set dico lput valeur dico
  
  set beliefs lput dico beliefs
end

to-report lookupb [cles]
  let indice 0
  foreach beliefs [
   if item 0 ? = cles [report item 1 ?]
   set indice indice + 1
  ]
end

to-report setBeliefs [cles valeur]
  let indice 0
  foreach beliefs [
    if item 0 ? = cles [
      set beliefs replace-item 1 beliefs valeur
    ]
    set indice indice + 1
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; EXPLORER BEHAVIOR ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to-report explorer-t1-action
 
  report "idle"
end





;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ROCKET-LAUNCHER BEHAVIOR ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to traitement-fils-message-launcher
  

    while [not empty? incoming-queue] [
      let msg get-message
      let performatif get-performative msg 
      let contenu get-content msg
      let emetteur get-sender msg ;; pour récupérer l'émetteur du message..
      let head get-heading-to-sender msg ;; la direction dans laquelle se trouve l'émetteur du message
      let dist get-distance-to-sender msg ;; la distance qui sépare l'émetteur du récepteur du message
                                          ;; faire l'action que l'on désire à partir du performatif du message et son contenu
      
      ;candidat accepte
      if  performatif = "propose"[ ]
        
      ]

    
end

to-report rocket-launcher-t1-action
  
  if ctask = "initial-state" [ 
    alistb "chef" nobody
    alistb "cible" nobody
    alistb "pile-afp" []
    alistb "afp" nobody
    show lookupb "cible"
    set ctask "explorer-launcher"
  ];definit etat initial
  

  

  set label ctask
  ;set label self
  report runresult ctask
  
end


to-report explorer-launcher
  let closet-launcher min-one-of get-rocket-number [distance myself]
  if closet-launcher < 20 and lookupb "chef" != nobody [
   ;protocole regroupement 
    setBeliefs afp "election-chef"
    send-message closet-launcher "election-chef" []
  ]
  report "idle"  
end




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; BASE BEHAVIOR ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;si attquer appeler demande autant de lauch-rocket que d'attaquant
to-report base-t1-action
  while [not empty? incoming-queue] 
    [let msg get-message
      show (sentence "received message: " msg)]
  ifelse energy > 5 * rocket-launcher-cost and energy > 5 * explorer-cost [
    ifelse random 20 > 5 
    [report "build-rocket-launcher"]
    [report "build-explorer"]
  ] [
    ifelse empty-bag? [
      report "idle"
    ] [
      report "eat"
    ]
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;